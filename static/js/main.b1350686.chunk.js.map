{"version":3,"sources":["utils/index.js","actions/index.js","reducers/index.js","components/Header/index.js","components/MovieDetailsCard/index.js","components/Footer/index.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["URL_MOVIES_SEARCH","URL_MOVIE_DETAIL","API_KEY","API_KEY_ALT","SEARCH_MOVIE","SEARCH_MOVIE_SUCCESS","SEARCH_MOVIE_FAILURE","GET_MOVIE","GET_MOVIE_SUCCESS","GET_MOVIE_FAILURE","getMovieSuccess","data","type","getMovieDetails","movieId","urlMovieDetails","concat","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","fetch","sent","json","abrupt","t0","error","stop","this","_x2","apply","arguments","INITIAL_STATE","isLoading","movie","dbMoviesApp","combineReducers","searchMovieList","state","length","undefined","action","objectSpread","movieData","assign","routing","routerReducer","Header","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","method","setState","value","getSuggestionValue","suggestion","title","onSuggestionsFetchRequested","suggestionValue","trim","url","then","results","map","id","suggestions","catch","console","log","onSuggestionsClearRequested","renderSuggestion","react_default","createElement","className","onSuggestionSelected","_ref3","preventDefault","_this$state","inputProps","placeholder","src","alt","width","height","dist_default","Component","connect","MovieDetailsCard","getFormattedGenres","genres","genresArray","genre","push","name","join","getFormattedReleaseDate","release_date","substring","_this$props$movieData","tagline","overview","poster_path","vote_average","runtime","imdb_id","homepage","formattedGenres","formattedReleaseDate","href","target","rel","Footer","favoriteMovies","MainPage","randomNumbers","Math","floor","random","Fragment","components_Header","components_MovieDetailsCard","components_Footer","App","components_MainPage","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","BrowserRouter","Route","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1350686.chunk.js","sourcesContent":["export const URL_MOVIES_SEARCH = 'https://api.themoviedb.org/3/search/movie?query=';\r\nexport const URL_MOVIE_DETAIL = 'https://api.themoviedb.org/3/movie/';\r\nexport const API_KEY = '?api_key=f0ec5dea593ad4b500ce7d88c8dede74';\r\nexport const API_KEY_ALT = '&api_key=f0ec5dea593ad4b500ce7d88c8dede74';\r\nexport const URl_MOVIE_POSTER = 'https://image.tmdb.org/t/p/';\r\nexport const IMG_SIZE = 'w342/'","// CONSTANTS\r\n\r\nimport {\r\n  URL_MOVIES_SEARCH, URL_MOVIE_DETAIL, API_KEY, API_KEY_ALT\r\n} from '../utils';\r\n\r\n// ACTION TYPES\r\n\r\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const SEARCH_MOVIE_SUCCESS = 'SEARCH_MOVIE_SUCCESS';\r\nexport const SEARCH_MOVIE_FAILURE = 'SEARCH_MOVIE_FAILURE';\r\nexport const GET_MOVIE = 'GET_MOVIE';\r\nexport const GET_MOVIE_SUCCESS = 'GET_MOVIE_SUCCESS';\r\nexport const GET_MOVIE_FAILURE = 'GET_MOVIE_FAILURE';\r\n\r\n// PURE FUNCTIONS\r\n\r\nfunction searchMovie(text) {\r\n  return {\r\n    type: SEARCH_MOVIE,\r\n    text,\r\n  }\r\n}\r\n\r\nfunction searchMovieSuccess(data, keyword) {\r\n  return {\r\n    type: SEARCH_MOVIE_SUCCESS,\r\n    data,\r\n    keyword\r\n  };\r\n}\r\n\r\nfunction searchMovieFailure(error) {\r\n  return {\r\n    type: SEARCH_MOVIE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction getMovie() {\r\n  return {\r\n    type: GET_MOVIE,\r\n  }\r\n}\r\n\r\nfunction getMovieSuccess(data) {\r\n  return {\r\n    type: GET_MOVIE_SUCCESS,\r\n    data,\r\n  }\r\n}\r\n\r\nfunction getMovieFailure(error) {\r\n  return {\r\n    type: GET_MOVIE_FAILURE,\r\n    error,\r\n  }\r\n}\r\n\r\n// SERVICE API\r\n\r\nexport function searchMovieList(keyword) {\r\n  let url = `${URL_MOVIES_SEARCH}${keyword}${API_KEY_ALT}`;\r\n  return async function (dispatch) {\r\n    dispatch(searchMovie())\r\n    try {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      const data = json.results;\r\n      return dispatch(searchMovieSuccess(data, keyword));\r\n    }\r\n    catch (error) {\r\n      return dispatch(searchMovieFailure(error));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function getMovieDetails(movieId) {\r\n  const urlMovieDetails = `${URL_MOVIE_DETAIL}${movieId}${API_KEY}`;\r\n  return async function (dispatch) {\r\n    dispatch(getMovie())\r\n    try {\r\n      const response = await fetch(urlMovieDetails);\r\n      const data = await response.json();\r\n      return dispatch(getMovieSuccess(data));\r\n\r\n    }\r\n    catch (error) {\r\n      return dispatch(getMovieFailure(error));\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\n// ACTIONS\r\nimport {\r\n  SEARCH_MOVIE, SEARCH_MOVIE_SUCCESS, SEARCH_MOVIE_FAILURE,\r\n  GET_MOVIE, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE\r\n} from '../actions';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  isLoading: false,\r\n  movie: [],\r\n  error: {}\r\n}\r\n\r\nconst searchMovieList = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_MOVIE_SUCCESS:\r\n      return { ...state, isLoading: false, movie: action.data };\r\n    case SEARCH_MOVIE_FAILURE:\r\n      return { ...state, isLoading: false, error: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst movieData = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE:\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n        movie: [],\r\n        error: null,\r\n      });\r\n    case GET_MOVIE_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        movie: action.data,\r\n        error: false,\r\n      });\r\n    case GET_MOVIE_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        movie: [],\r\n        error: action.data,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst dbMoviesApp = combineReducers({\r\n  searchMovieList,\r\n  movieData,\r\n  routing: routerReducer,\r\n})\r\n\r\nexport default dbMoviesApp;","// CORE\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// HELPERS\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { API_KEY_ALT, URL_MOVIES_SEARCH } from '../../utils';\r\n\r\n// STYLES\r\nimport '../../styles/header.scss';\r\nimport '../../styles/search_theme.scss';\r\n\r\n// ACTIONS\r\nimport { getMovieDetails } from '../../actions';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n    }\r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    })\r\n  }\r\n\r\n  getSuggestionValue = (suggestion) => {\r\n    return suggestion.title;\r\n  }\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    const suggestionValue = value.trim(); // The trim() method removes whitespace from both sides of a string.\r\n    if (suggestionValue.length > 0) {\r\n      let url = `${URL_MOVIES_SEARCH}${suggestionValue}${API_KEY_ALT}`;\r\n      fetch(url).then(response => response.json())\r\n        .then(json => json.results)\r\n        .then(data => {\r\n          const results = data.map(movie => {\r\n            const movieData = {};\r\n            movieData.id = movie.id\r\n            movieData.title = movie.title\r\n            return movieData\r\n          });\r\n          this.setState({\r\n            suggestions: results\r\n          });\r\n        }).catch(error => console.log(error, \" - Exception\"));\r\n    } else {\r\n      this.setState({\r\n        suggestions: []\r\n      })\r\n    }\r\n  }\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  renderSuggestion = (suggestion) => (\r\n    <div className=\"search-result-text\">\r\n      {suggestion.title}\r\n    </div>\r\n  );\r\n\r\n  onSuggestionSelected = (event, { suggestion, method }) => {\r\n    const { dispatch } = this.props;\r\n    if (method === 'enter')\r\n      event.preventDefault();\r\n    dispatch(getMovieDetails(suggestion.id));\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      value,\r\n      onChange: this.onChange,\r\n      placeholder: 'Search Movie Title...'\r\n    };\r\n\r\n    return (\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <img src=\"https://bit.ly/2QHaVNq\" alt=\"TMDB logo\" width=\"150\" height=\"60\" />\r\n        </div>\r\n        <div className=\"search\">\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionSelected={this.onSuggestionSelected}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={this.getSuggestionValue}\r\n            renderSuggestion={this.renderSuggestion}\r\n            inputProps={inputProps} />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, null)(Header);","import React, { Component } from 'react';\r\nimport '../../styles/card.scss';\r\nimport { URl_MOVIE_POSTER, IMG_SIZE } from '../../utils';\r\n\r\n\r\nclass MovieDetailsCard extends Component {\r\n\r\n  getFormattedGenres = () => {\r\n    const { genres } = this.props.movieData.movie;\r\n    let genresArray = [];\r\n    if (genres !== undefined) {\r\n      genres.map(genre => genresArray.push(genre.name))\r\n      const formattedGenres = genresArray.join(', ');\r\n      return formattedGenres;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getFormattedReleaseDate = () => {\r\n    const { release_date } = this.props.movieData.movie;\r\n    if (release_date !== undefined) {\r\n      const formattedReleaseDate = release_date.substring(0, 4);\r\n      return formattedReleaseDate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, tagline, overview, poster_path, vote_average, runtime, imdb_id, homepage } = this.props.movieData.movie;\r\n\r\n    const formattedGenres = this.getFormattedGenres();\r\n    const formattedReleaseDate = this.getFormattedReleaseDate();\r\n\r\n    return (\r\n      <div className=\"movie-details-container\">\r\n\r\n        <img className=\"movie-poster\" src={`${URl_MOVIE_POSTER}${IMG_SIZE}${poster_path}`} alt=\"Movie Poster\" width=\"200\" height=\"500\" />\r\n\r\n        <div className=\"info-container\">\r\n\r\n          <h2>{title}</h2>\r\n          <h3>{tagline}</h3>\r\n\r\n          <ul>\r\n            <li><span className=\"icon far fa-star\"></span><span>{vote_average}/10</span></li>\r\n            <li><span className=\"far fa-clock\"></span><span>{runtime}min</span></li>\r\n            <li><span className=\"far fa-calendar-check\"></span><span>{formattedReleaseDate}</span></li>\r\n          </ul>\r\n\r\n          <p>\r\n            {overview}\r\n          </p>\r\n\r\n          <p className=\"genres\">\r\n            <span>Genre:&nbsp;</span>{formattedGenres}</p>\r\n\r\n          <div className=\"footer-icons-container\">\r\n            <a href={`https://www.imdb.com/title/${imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"imdb-icon fab fa-imdb\" title=\"More on IMDB\"></i></a>\r\n            <a href={`${homepage}`} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Movie Homepage\"><i className=\"more-info-icon fas fa-info-circle\"></i></a>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MovieDetailsCard;","import React from 'react';\r\nimport '../../styles/footer.scss'\r\nconst Footer = () => (\r\n  <div className=\"footer-container\">\r\n    <p>\r\n      Made with <a className=\"code-icon\" href=\"https://github.com/jamilelima/dbmovies\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-code\"></i></a> and <i className=\"fas fa-mug-hot\"></i> by <a className=\"github-profile\" href=\"https://github.com/jamilelima\" target=\"_blank\" rel=\"noopener noreferrer\"> Jamile Lima</a>\r\n    </p>\r\n  </div>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport MovieDetailsCard from './MovieDetailsCard';\r\nimport Footer from './Footer';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieDetails } from '../actions';\r\n\r\nconst favoriteMovies = [297802, 299536, 383498, 363088, 284054, 141052, 297762, 263115, 284052, 271110, 345920, 300668];\r\nclass MainPage extends Component {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getMovieDetails(this.randomNumbers()));\r\n  }\r\n\r\n  randomNumbers = () => {\r\n    const number = favoriteMovies[Math.floor(Math.random() * favoriteMovies.length)];\r\n    return number;\r\n  }\r\n\r\n\r\n  render() {\r\n    const { movieData } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <MovieDetailsCard movieData={movieData} />\r\n        <Footer />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { movieData } = state;\r\n  return { movieData }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);","import React, { Component } from 'react';\r\nimport MainPage from './components/MainPage';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MainPage />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport dbMoviesApp from './reducers';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(dbMoviesApp, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}