{"version":3,"sources":["utils/index.js","actions/index.js","reducers/index.js","components/CircleInfo/index.js","components/Header/index.js","components/MovieDetailsCard/index.js","components/SearchBar/index.js","components/MoviesList/components/MovieItem/index.js","components/MoviesList/index.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["URL_MOVIES_SEARCH","URL_POLULAR_MOVIES_SEARCH","URL_MOVIE_DETAIL","API_KEY","API_KEY_ALT","URl_MOVIE_POSTER","URL_YOUTUBE","IMG_SIZE_SMALL","getFormattedReleaseDate","release_date","undefined","substring","split","reverse","join","getFormattedGenre","genres","Object","keys","map","key","genreName","name","react_default","a","createElement","index","className","formatMoney","Intl","NumberFormat","style","currency","minimumFractionDigits","SEARCH_MOVIE","SEARCH_MOVIE_SUCCESS","SEARCH_MOVIE_FAILURE","GET_MOVIE","GET_MOVIE_SUCCESS","GET_MOVIE_FAILURE","GET_POPULAR_MOVIES","GET_POPULAR_MOVIES_SUCCESS","GET_POPULAR_MOVIES_FAILURE","getMovieSuccess","data","type","getPopularMoviesSuccess","getMovieDetails","movieId","urlMovieDetails","concat","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","wrap","_context2","prev","next","fetch","sent","json","abrupt","t0","error","stop","this","_x2","apply","arguments","INITIAL_STATE","isLoading","movie","popularMovies","dbMoviesApp","combineReducers","searchMovieList","state","length","action","objectSpread","movieData","assign","getPopularMovies","routing","routerReducer","CircleInfo","props","avarage","avarageInPercent","result","Math","round","calculateAndReturnPercent","nameOfClass","defaultProps","Header","href","MovieDetailsCard","translateMovieStatus","status","statusPtBr","translateMovieLanguage","language","languageName","convertAndFormatRuntime","runtime","hours","roundHours","floor","minutes","roundMinutes","formatBudget","budget","format","formatRevenue","revenue","formatProfit","formatMovieTrailerUrl","movieVideoObj","results","youtubeKey","match","params","ReactDom","findDOMNode","scrollIntoView","_this$props$movieData","title","overview","poster_path","vote_average","original_language","videos","formattedReleaseDate","formattedGenre","statusName","movieLanguage","movieRuntime","formattedBudget","formattedRevenue","formattedProfit","movieTrailerUrl","react","components_Header","components_CircleInfo","src","alt","ReactPlayer_default","url","Component","connect","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","method","setState","value","getSuggestionValue","suggestion","onSuggestionsFetchRequested","suggestionValue","trim","then","id","image","year","suggestions","catch","console","log","onSuggestionsClearRequested","renderSuggestion","Link","to","textDecoration","onSuggestionSelected","_ref3","preventDefault","history","push","_this$state","inputProps","placeholder","dist_default","withRouter","MovieItem","MoviesList","renderMovieItem","movies","components_MovieItem","returnRandomNumber","random","pageNumber","_callee3","_context3","_x3","getPopularMoviesList","renderItems","MainPage","Fragment","components_SearchBar","components_MoviesList","store","createStore","applyMiddleware","thunk","RootContainerComponent","BrowserRouter","Switch","Route","exact","path","component","render","routeProps","components_MovieDetailsCard","RootContainer","App","es","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3667f03.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const URL_MOVIES_SEARCH =\r\n  \"https://api.themoviedb.org/3/search/movie?query=\";\r\nexport const URL_POLULAR_MOVIES_SEARCH =\r\n  \"https://api.themoviedb.org/3/movie/popular\";\r\nexport const URL_MOVIE_DETAIL = \"https://api.themoviedb.org/3/movie/\";\r\nexport const API_KEY = \"?api_key=f0ec5dea593ad4b500ce7d88c8dede74\";\r\nexport const API_KEY_ALT = \"&api_key=f0ec5dea593ad4b500ce7d88c8dede74\";\r\nexport const URl_MOVIE_POSTER = \"https://image.tmdb.org/t/p/\";\r\nexport const URL_YOUTUBE = \"https://www.youtube.com/embed/\";\r\nexport const IMG_SIZE = \"w342/\";\r\nexport const IMG_SIZE_SMALL = \"w45/\";\r\n\r\n// METHODS\r\nexport const getFormattedReleaseDate = release_date => {\r\n  if (release_date !== undefined) {\r\n    const formattedReleaseDate = release_date\r\n      .substring(0, 10)\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"/\");\r\n    return formattedReleaseDate;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getFormattedGenre = genres => {\r\n  if (genres !== undefined) {\r\n    return Object.keys(genres).map(key => {\r\n      let genreName = genres[key].name;\r\n      return (\r\n        <li key={key} index={key} className=\"genre-item\">\r\n          {genreName}\r\n        </li>\r\n      );\r\n    });\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const formatMoney = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 2\r\n});\r\n","// CONSTANTS\r\n\r\nimport {\r\n  URL_MOVIES_SEARCH,\r\n  URL_POLULAR_MOVIES_SEARCH,\r\n  URL_MOVIE_DETAIL,\r\n  API_KEY,\r\n  API_KEY_ALT\r\n} from \"../utils\";\r\n\r\n// ACTION TYPES\r\n\r\nexport const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const SEARCH_MOVIE_SUCCESS = \"SEARCH_MOVIE_SUCCESS\";\r\nexport const SEARCH_MOVIE_FAILURE = \"SEARCH_MOVIE_FAILURE\";\r\nexport const GET_MOVIE = \"GET_MOVIE\";\r\nexport const GET_MOVIE_SUCCESS = \"GET_MOVIE_SUCCESS\";\r\nexport const GET_MOVIE_FAILURE = \"GET_MOVIE_FAILURE\";\r\nexport const GET_POPULAR_MOVIES = \"GET_POPULAR_MOVIES\";\r\nexport const GET_POPULAR_MOVIES_SUCCESS = \"GET_POPULAR_MOVIES_SUCCESS\";\r\nexport const GET_POPULAR_MOVIES_FAILURE = \"GET_MOVIE_FAILURE\";\r\n\r\n// PURE FUNCTIONS\r\n\r\nfunction searchMovie(text) {\r\n  return {\r\n    type: SEARCH_MOVIE,\r\n    text\r\n  };\r\n}\r\n\r\nfunction searchMovieSuccess(data, keyword) {\r\n  return {\r\n    type: SEARCH_MOVIE_SUCCESS,\r\n    data,\r\n    keyword\r\n  };\r\n}\r\n\r\nfunction searchMovieFailure(error) {\r\n  return {\r\n    type: SEARCH_MOVIE_FAILURE,\r\n    error\r\n  };\r\n}\r\n\r\nfunction getMovie() {\r\n  return {\r\n    type: GET_MOVIE\r\n  };\r\n}\r\n\r\nfunction getMovieSuccess(data) {\r\n  return {\r\n    type: GET_MOVIE_SUCCESS,\r\n    data\r\n  };\r\n}\r\n\r\nfunction getMovieFailure(error) {\r\n  return {\r\n    type: GET_MOVIE_FAILURE,\r\n    error\r\n  };\r\n}\r\n\r\nfunction getPopularMovies() {\r\n  return {\r\n    type: GET_POPULAR_MOVIES\r\n  };\r\n}\r\n\r\nfunction getPopularMoviesSuccess(data) {\r\n  return {\r\n    type: GET_POPULAR_MOVIES_SUCCESS,\r\n    data\r\n  };\r\n}\r\n\r\nfunction getPopularMoviesFailure(error) {\r\n  return {\r\n    type: GET_POPULAR_MOVIES_FAILURE,\r\n    error\r\n  };\r\n}\r\n\r\n// SERVICE API\r\n\r\nexport function searchMovieList(keyword) {\r\n  let url = `${URL_MOVIES_SEARCH}${keyword}${API_KEY_ALT}&language=pt-BR`;\r\n  return async function(dispatch) {\r\n    dispatch(searchMovie());\r\n    try {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      const data = json.results;\r\n      return dispatch(searchMovieSuccess(data, keyword));\r\n    } catch (error) {\r\n      return dispatch(searchMovieFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function getMovieDetails(movieId) {\r\n  const urlMovieDetails = `${URL_MOVIE_DETAIL}${movieId}${API_KEY}&language=pt-BR&append_to_response=videos`;\r\n  return async function(dispatch) {\r\n    dispatch(getMovie());\r\n    try {\r\n      const response = await fetch(urlMovieDetails);\r\n      const data = await response.json();\r\n      return dispatch(getMovieSuccess(data));\r\n    } catch (error) {\r\n      return dispatch(getMovieFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function getPopularMoviesList(pageNumber) {\r\n  let url = `${URL_POLULAR_MOVIES_SEARCH}${API_KEY}&language=pt-BR&page=${pageNumber}`;\r\n  return async function(dispatch) {\r\n    dispatch(getPopularMovies());\r\n    try {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      const data = json.results;\r\n      return dispatch(getPopularMoviesSuccess(data));\r\n    } catch (error) {\r\n      return dispatch(getPopularMoviesFailure(error));\r\n    }\r\n  };\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { routerReducer } from \"react-router-redux\";\r\n\r\n// ACTIONS\r\nimport {\r\n  SEARCH_MOVIE,\r\n  SEARCH_MOVIE_SUCCESS,\r\n  SEARCH_MOVIE_FAILURE,\r\n  GET_POPULAR_MOVIES,\r\n  GET_POPULAR_MOVIES_SUCCESS,\r\n  GET_POPULAR_MOVIES_FAILURE,\r\n  GET_MOVIE,\r\n  GET_MOVIE_SUCCESS,\r\n  GET_MOVIE_FAILURE\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  isLoading: false,\r\n  movie: [],\r\n  popularMovies: [],\r\n  error: {}\r\n};\r\n\r\nconst searchMovieList = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_MOVIE_SUCCESS:\r\n      return { ...state, isLoading: false, movie: action.data };\r\n    case SEARCH_MOVIE_FAILURE:\r\n      return { ...state, isLoading: false, error: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst movieData = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE:\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n        movie: [],\r\n        error: null\r\n      });\r\n    case GET_MOVIE_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        movie: action.data,\r\n        error: false\r\n      });\r\n    case GET_MOVIE_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        movie: [],\r\n        error: action.data\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getPopularMovies = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_POPULAR_MOVIES:\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n        popularMovies: [],\r\n        error: null\r\n      });\r\n    case GET_POPULAR_MOVIES_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        popularMovies: action.data,\r\n        error: false\r\n      });\r\n    case GET_POPULAR_MOVIES_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        popularMovies: [],\r\n        error: action.data\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dbMoviesApp = combineReducers({\r\n  searchMovieList,\r\n  movieData,\r\n  getPopularMovies,\r\n  routing: routerReducer\r\n});\r\n\r\nexport default dbMoviesApp;\r\n","import React from \"react\";\nimport \"../../styles/circle_info.scss\";\n\nconst CircleInfo = props => {\n  const { avarage } = props;\n\n  const calculateAndReturnPercent = () => {\n    const MAX = 10;\n    const PERCENT = 100;\n    const result = (avarage / MAX) * PERCENT;\n    return Math.round(result);\n  };\n\n  const avarageInPercent = calculateAndReturnPercent();\n\n  return <div className={props.nameOfClass}>{`${avarageInPercent}%`}</div>;\n};\n\nCircleInfo.defaultProps = {\n  avarage: \"0\"\n};\n\nexport default CircleInfo;\n","import React from \"react\";\r\n\r\n// STYLES\r\nimport \"../../styles/header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header-content\">\r\n      <a href=\"/\">\r\n        <h1 className=\"header-title\">Movies</h1>\r\n      </a>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"../../styles/card.scss\";\r\nimport {\r\n  URl_MOVIE_POSTER,\r\n  IMG_SIZE,\r\n  getFormattedReleaseDate,\r\n  getFormattedGenre,\r\n  URL_YOUTUBE\r\n} from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovieDetails } from \"../../actions\";\r\nimport { formatMoney } from \"../../utils\";\r\nimport CircleInfo from \"../CircleInfo\";\r\nimport Header from \"../Header\";\r\nimport \"../../styles/body.scss\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nclass MovieDetailsCard extends Component {\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const { movieId } = this.props.match.params;\r\n    dispatch(getMovieDetails(movieId));\r\n    // @TODO: Find a better way to do this -> Prevent scroll \"jump\"\r\n    ReactDom.findDOMNode(this).scrollIntoView();\r\n  }\r\n\r\n  translateMovieStatus = status => {\r\n    let statusPtBr;\r\n    switch (status) {\r\n      case \"Released\":\r\n        statusPtBr = \"Lançado\";\r\n        break;\r\n      case \"Post Production\":\r\n        statusPtBr = \"Pós produção\";\r\n        break;\r\n      default:\r\n        statusPtBr = \"Não encontrado\";\r\n        break;\r\n    }\r\n    return statusPtBr;\r\n  };\r\n\r\n  translateMovieLanguage = language => {\r\n    let languageName;\r\n    switch (language) {\r\n      case \"pt\":\r\n        languageName = \"Português\";\r\n        break;\r\n      case \"es\":\r\n        languageName = \"Espanhol\";\r\n        break;\r\n      case \"hi\":\r\n        languageName = \"Hindi\";\r\n        break;\r\n      case \"en\":\r\n        languageName = \"Inglês\";\r\n        break;\r\n      default:\r\n        languageName = \"Não informado\";\r\n        break;\r\n    }\r\n    return languageName;\r\n  };\r\n\r\n  convertAndFormatRuntime = runtime => {\r\n    if (runtime !== null) {\r\n      const hours = runtime / 60;\r\n      const roundHours = Math.floor(hours);\r\n      const minutes = (hours - roundHours) * 60;\r\n      const roundMinutes = Math.round(minutes);\r\n      return `${roundHours}h ${roundMinutes}min`;\r\n    } else {\r\n      return \"Não informado\";\r\n    }\r\n  };\r\n\r\n  formatBudget = budget => {\r\n    if (budget) {\r\n      const formattedBudget = formatMoney.format(budget);\r\n      return formattedBudget;\r\n    } else {\r\n      return \"Não informado\";\r\n    }\r\n  };\r\n\r\n  formatRevenue = revenue => {\r\n    if (revenue) {\r\n      const formattedRevenue = formatMoney.format(revenue);\r\n      return formattedRevenue;\r\n    } else {\r\n      return \"Não informado\";\r\n    }\r\n  };\r\n\r\n  formatProfit = (revenue, budget) => {\r\n    if (revenue) {\r\n      const profit = formatMoney.format(revenue - budget);\r\n      return profit;\r\n    } else {\r\n      return \"Não informado\";\r\n    }\r\n  };\r\n\r\n  formatMovieTrailerUrl = movieVideoObj => {\r\n    if (movieVideoObj !== undefined) {\r\n      if (movieVideoObj.results[0]) {\r\n        const youtubeKey = movieVideoObj.results[0].key;\r\n        const trailerUrl = `${URL_YOUTUBE}${youtubeKey}`;\r\n        return trailerUrl;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      overview,\r\n      poster_path,\r\n      vote_average,\r\n      runtime,\r\n      budget,\r\n      revenue,\r\n      status,\r\n      release_date,\r\n      genres,\r\n      original_language,\r\n      videos\r\n    } = this.props.movieData.movie;\r\n\r\n    const formattedReleaseDate = getFormattedReleaseDate(release_date);\r\n    const formattedGenre = getFormattedGenre(genres);\r\n    const statusName = this.translateMovieStatus(status);\r\n    const movieLanguage = this.translateMovieLanguage(original_language);\r\n    const movieRuntime = this.convertAndFormatRuntime(runtime);\r\n    const formattedBudget = this.formatBudget(budget);\r\n    const formattedRevenue = this.formatRevenue(revenue);\r\n    const formattedProfit = this.formatProfit(revenue, budget);\r\n    const movieTrailerUrl = this.formatMovieTrailerUrl(videos);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <div className=\"movie-details-container\">\r\n          <div className=\"movie-title-container\">\r\n            <h1 className=\"movie-title-text\">{title}</h1>\r\n            <p className=\"formatted-release-date\">{formattedReleaseDate}</p>\r\n          </div>\r\n          <div className=\"info-container\">\r\n            <div className=\"overview-container\">\r\n              <h3 className=\"overview-title\">Sinopse</h3>\r\n              <p className=\"movie-details-overview-text\">{overview}</p>\r\n\r\n              <h3 className=\"overview-title\">Informações</h3>\r\n              <div className=\"info-items-container\">\r\n                <div className=\"info-item\">\r\n                  <h6>Situação</h6>\r\n                  <span>{statusName}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <h6>Idioma</h6>\r\n                  <span>{movieLanguage}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <h6>Duração</h6>\r\n                  <span>{movieRuntime}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <h6>Orçamento</h6>\r\n                  <span>{formattedBudget}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <h6>Receita</h6>\r\n                  <span>{formattedRevenue}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <h6>Lucro</h6>\r\n                  <span>{formattedProfit}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"movie-info-footer\">\r\n                <ul className=\"movie-details-genres\">{formattedGenre}</ul>\r\n                <CircleInfo avarage={vote_average} nameOfClass=\"big_circle\" />\r\n              </div>\r\n            </div>\r\n            <img\r\n              src={`${URl_MOVIE_POSTER}${IMG_SIZE}${poster_path}`}\r\n              alt=\"Movie poster\"\r\n            />\r\n          </div>\r\n          <div className=\"player-wrapper\">\r\n            <ReactPlayer url={movieTrailerUrl} />\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMovieDetailsCard.defaultProps = {\r\n  title: \"Movie Title\",\r\n  overview:\r\n    \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Accusantium voluptate eligendi eum deserunt! Ullam aut excepturi neque ratione, eveniet rem fugiat quam sit numquam quae eum deserunt dolorum temporibus eius.\",\r\n  poster_path: \"https://via.placeholder.com/340x510.png\",\r\n  vote_average: 0,\r\n  runtime: 0,\r\n  budget: 0,\r\n  revenue: 0,\r\n  status: \"\",\r\n  release_date: \"Não informado\",\r\n  genres: [],\r\n  original_language: \"\",\r\n  videos: \"\"\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { movieData } = state;\r\n  return { movieData };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieDetailsCard);\r\n","// CORE\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// HELPERS\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport {\r\n  API_KEY_ALT,\r\n  URL_MOVIES_SEARCH,\r\n  IMG_SIZE_SMALL,\r\n  URl_MOVIE_POSTER\r\n} from \"../../utils\";\r\n\r\n// STYLES\r\nimport \"../../styles/header.scss\";\r\nimport \"../../styles/search_theme.scss\";\r\n\r\n// ACTIONS\r\nimport { getMovieDetails } from \"../../actions\";\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  getSuggestionValue = suggestion => {\r\n    return suggestion.title;\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    const suggestionValue = value.trim(); // The trim() method removes whitespace from both sides of a string.\r\n    if (suggestionValue.length > 0) {\r\n      let url = `${URL_MOVIES_SEARCH}${suggestionValue}${API_KEY_ALT}&language=pt-BR`;\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(json => json.results)\r\n        .then(data => {\r\n          const results = data.map(movie => {\r\n            const movieData = {};\r\n            movieData.id = movie.id;\r\n            movieData.title = movie.title;\r\n            movieData.image = movie.poster_path;\r\n            movieData.year =\r\n              movie.release_date === \"\"\r\n                ? \"0000\"\r\n                : movie.release_date.substring(0, 4);\r\n            return movieData;\r\n          });\r\n          this.setState({\r\n            suggestions: results\r\n          });\r\n        })\r\n        .catch(error => console.log(error, \" - Exception\"));\r\n    } else {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    }\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  renderSuggestion = suggestion => (\r\n    <Link\r\n      className=\"link-text\"\r\n      to={`/search/${suggestion.id}`}\r\n      style={{ textDecoration: \"none\" }}\r\n    >\r\n      <img\r\n        className=\"result-poster\"\r\n        src={\r\n          suggestion.image == null\r\n            ? null\r\n            : `${URl_MOVIE_POSTER}${IMG_SIZE_SMALL}${suggestion.image}`\r\n        }\r\n        alt=\"Movie Poster\"\r\n      />\r\n      <div className=\"result-text\">\r\n        <div className=\"search-result-name\">{suggestion.title}</div>\r\n        {suggestion.year}\r\n      </div>\r\n    </Link>\r\n  );\r\n\r\n  onSuggestionSelected = (event, { suggestion, method }) => {\r\n    const { dispatch } = this.props;\r\n    if (method === \"enter\") event.preventDefault();\r\n    dispatch(getMovieDetails(suggestion.id));\r\n    this.setState({ value: \"\" });\r\n    this.props.history.push(`/search/${suggestion.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      value,\r\n      onChange: this.onChange,\r\n      placeholder: \"Busque um filme pelo nome...\"\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionSelected={this.onSuggestionSelected}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={this.getSuggestionValue}\r\n        renderSuggestion={this.renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    null\r\n  )(SearchBar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { URl_MOVIE_POSTER, IMG_SIZE } from \"../../../../utils\";\r\nimport CircleInfo from \"../../../CircleInfo\";\r\n\r\nimport { getFormattedReleaseDate, getFormattedGenre } from \"../../../../utils\";\r\nimport \"../../../../styles/movie_item.scss\";\r\n\r\nclass MovieItem extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      overview,\r\n      poster_path,\r\n      vote_average,\r\n      release_date,\r\n      genres\r\n    } = this.props.movieData;\r\n\r\n    const formattedReleaseDate = getFormattedReleaseDate(release_date);\r\n    const formattedGenre = getFormattedGenre(genres);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card-content\">\r\n          <img src={`${URl_MOVIE_POSTER}${IMG_SIZE}${poster_path}`} alt=\"\" />\r\n          <div className=\"card-info\">\r\n            <div className=\"header-container\">\r\n              <Link to={`/movie/${id}`} style={{ textDecoration: \"none\" }}>\r\n                <h1 className=\"title-text\">{title}</h1>\r\n              </Link>\r\n              <CircleInfo avarage={vote_average} nameOfClass=\"circle\" />\r\n            </div>\r\n            <p className=\"release-date-text\">{formattedReleaseDate}</p>\r\n            <div className=\"movie-details\">\r\n              <p className=\"overview-text\">{overview}</p>\r\n              <ul className=\"genre-list-container\">{formattedGenre}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieItem.defaultProps = {\r\n  title: \"Movie Title\",\r\n  overview:\r\n    \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Accusantium voluptate eligendi eum deserunt! Ullam aut excepturi neque ratione, eveniet rem fugiat quam sit numquam quae eum deserunt dolorum temporibus eius.\",\r\n  poster_path: \"https://via.placeholder.com/340x510.png\",\r\n  vote_average: 0,\r\n  release_date: \"Não informado\",\r\n  genres: []\r\n};\r\n\r\nexport default MovieItem;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieItem from \"./components/MovieItem\";\r\nimport { getPopularMoviesList } from \"../../actions\";\r\n\r\nclass MoviesList extends Component {\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const randomNumber = this.returnRandomNumber();\r\n    dispatch(getPopularMoviesList(randomNumber));\r\n  }\r\n\r\n  renderMovieItem = movies => {\r\n    if (movies.length > 0) {\r\n      return Object.keys(movies).map(key => {\r\n        let movieData = movies[key];\r\n        return <MovieItem key={key} index={key} movieData={movieData} />;\r\n      });\r\n    }\r\n  };\r\n\r\n  returnRandomNumber = () => {\r\n    const randomNumber = Math.floor(Math.random() * (10 - 1 + 1)) + 10;\r\n    return randomNumber;\r\n  };\r\n\r\n  render() {\r\n    const { popularMovies } = this.props;\r\n    const renderItems = this.renderMovieItem(popularMovies);\r\n    return <Fragment>{renderItems}</Fragment>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { popularMovies } = state.getPopularMovies;\r\n  return { popularMovies };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviesList);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport \"../styles/main.scss\";\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <SearchBar />\r\n        <MoviesList />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","/* Core */\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\n\r\n/* Redux */\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n/* Reducers */\r\nimport dbMoviesApp from \"./reducers\";\r\n\r\n/* Components */\r\nimport MovieDetailsCard from \"./components/MovieDetailsCard\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport MovieItem from \"./components/MoviesList/components/MovieItem\";\r\nimport Header from \"./components/Header\";\r\nimport SearchBar from \"./components/SearchBar\";\r\n\r\nlet store = createStore(dbMoviesApp, applyMiddleware(thunk));\r\n\r\nclass RootContainerComponent extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route\r\n            path=\"/movie/:movieId\"\r\n            render={routeProps => (\r\n              <MovieDetailsCard\r\n                {...routeProps}\r\n                movieData={this.props.movieData}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/search/:movieId\"\r\n            render={routeProps => (\r\n              <Fragment>\r\n                <Header />\r\n                <SearchBar />\r\n                <MovieItem\r\n                  {...routeProps}\r\n                  movieData={this.props.movieData.movie}\r\n                />\r\n              </Fragment>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movieData: state.movieData\r\n  };\r\n};\r\n\r\nlet RootContainer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(RootContainerComponent);\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <RootContainer />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}